import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
    defaultConfig {
        applicationId "com.aonescan.scanner"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode getVersionCode()
        versionName "1.4.-beta${getVersionCode()}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.defaultConfig.ndk.debugSymbolLevel = 'SYMBOL_TABLE'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    ndkVersion '22.1.7171670'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation project(path: ':openCVLibrary347')
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //Material
    implementation 'com.google.android.material:material:1.4.0-beta01'

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.1.0-alpha05"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha25"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha25"
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //play core
    implementation 'com.google.android.play:core:1.10.0'
    
    //Room
    def room_version = "2.3.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    //bubble seek
    implementation 'com.github.amn-max:BubbleSeekBar:2.1'

    //material dialog
    implementation 'dev.shreyaspatil.MaterialDialog:MaterialDialog:2.2.2'

    //lottie
    implementation 'com.airbnb.android:lottie:3.7.0'

    //pdf preview
    implementation 'com.github.barteksc:pdfium-android:1.9.0'

    //pdf viewer
    implementation 'com.github.amn-max:AndroidPdfViewer:3.1.0-beta.1'

    //A Java serialization/deserialization library to convert Java Objects into JSON and back
    implementation 'com.google.code.gson:gson:2.8.6'

    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"


    // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
    implementation 'com.github.amn-max:PdfBox-Android:v1.8.10.3'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:28.0.1')
    implementation 'com.google.firebase:firebase-analytics'

    //ads
    implementation 'com.google.android.gms:play-services-ads:20.1.0'

    implementation 'com.github.zomato:androidphotofilters:1.0.2'

    implementation "com.github.skydoves:balloon:1.3.4"
    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
}

task('increaseVersionCode') {
    def buildGradle = file("build.gradle")
    def buildGradleContents = buildGradle.getText()
    def matcher =
            Pattern.compile("versionCode(\\s+\\d+)").matcher(buildGradleContents)
    def versionCode = android.defaultConfig.versionCode
    buildGradle.write(matcher.replaceAll("versionCode " + ++versionCode))
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig') {
        task.dependsOn 'increaseVersionCode'
    }
}

def static getVersionCode(offset = 0) {
    def formattedDate = new Date().format('yyMMddHH')
    return formattedDate.toInteger() + offset
}
